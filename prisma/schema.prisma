generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  // id        Int         @id @default(autoincrement())
  id        String      @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  username  String      @unique
  email     String      @unique
  password  String
  isAdmin   Boolean     @default(false)
  createdAt DateTime    @default(now()) @db.Timestamp()
  updatedAt DateTime    @default(now()) @db.Timestamp()
  UserToken UserToken[]
  // Session   Session[]
}

model UserToken {
  // id           Int      @id @default(autoincrement())
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  refreshToken String
  // user         User?    @relation(fields: [userId], references: [id])
  // userId       Int?
  user         User?    @relation(fields: [userId], references: [id])
  userId       String   @db.ObjectId
  expiresDate  DateTime @default(now()) @db.Timestamp()
  createdAt    DateTime @default(now()) @db.Timestamp()
  updatedAt    DateTime @default(now()) @db.Timestamp()
}

// model Session {
//   id        Int      @id @default(autoincrement())
//   clientId  String
//   createdAt DateTime @default(now()) @db.Timestamp()
//   updatedAt DateTime @default(now()) @db.Timestamp()
//   user      User?    @relation(fields: [userId], references: [id])
//   userId    Int?
// }

model WebWhatsapp {
  // id        Int      @id @default(autoincrement())
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  clientId  String   @unique
  session   String
  status    String
}
